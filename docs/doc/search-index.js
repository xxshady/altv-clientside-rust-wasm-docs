var searchIndex = new Map(JSON.parse('[\
["rust_wasm",{"doc":"","t":"QQCHHCCCCFNNNNNNNNFNNNNNNNNK","n":["__log","__log_warn","base_objects","main","on_every_tick","detached_player","docs_borrowed","player","scope","DetachedPlayer","attach_to_scope","borrow","borrow_mut","from","into","try_from","try_into","type_id","Player","borrow","borrow_mut","detach_from_scope","from","into","try_from","try_into","type_id","Scope"],"q":[[0,"rust_wasm"],[5,"rust_wasm::base_objects"],[9,"rust_wasm::base_objects::detached_player"],[18,"rust_wasm::base_objects::player"],[27,"rust_wasm::base_objects::scope"],[28,"core::option"],[29,"core::result"],[30,"core::any"]],"d":["","","","","","","What are borrowed base objects","","","Player instance “detached” from <code>scope</code>, “detached” …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","Scope where “borrowed” base objects (for example …"],"i":[0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,0,3,3,3,3,3,3,3,3,0],"f":"```{{}b}0`````{{dc}{{h{f}}}j}{ce{}{}}0{cc{}}1{c{{l{e}}}{}{}}0{cn{}}`33{fd}34221`","c":[],"p":[[1,"unit"],[5,"DetachedPlayer",9],[5,"Player",18],[6,"Option",28],[10,"Scope",27],[6,"Result",29],[5,"TypeId",30]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
